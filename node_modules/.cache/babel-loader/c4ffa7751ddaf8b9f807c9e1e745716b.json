{"ast":null,"code":"var _jsxFileName = \"/Users/river/Desktop/Project-_Flashcards-_Qualified-main/src/Layout/cards/EditCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateCard, readDeck } from \"../../utils/api\";\nimport NavigationBar from \"../NavigationBar\";\nimport NotFound from \"../NotFound\";\nimport CardFormData from \"./CardFormData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditCard() {\n  _s();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(deck => {\n      setDeck(deck);\n      const card = deck.cards.find(card => card.id === parseInt(cardId));\n      setFront(card.front);\n      setBack(card.back);\n    }).catch(e => {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this);\n    });\n    return () => abortController.abort();\n  }, [deckId]);\n  if (!deck) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSubmit = event => {\n    event.preventDefault();\n    const card = {\n      id: cardId,\n      front,\n      back\n    };\n    updateCard(card).then(window.alert(\"Card Info Was Updated\")).catch(console.log).then(history.push(`/decks/${deckId}`));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n      navItems: [deck.name, \"Edit Card \" + cardId]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardFormData, {\n        front: front,\n        setFront: setFront,\n        back: back,\n        setBack: setBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        className: \"form-button btn btn-lg btn-secondary mr-2\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-lg\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(EditCard, \"7haVeRvmqg4Mwz7AziRpE+aP+98=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditCard;\nexport default EditCard;\nvar _c;\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","Link","updateCard","readDeck","NavigationBar","NotFound","CardFormData","EditCard","deckId","cardId","deck","setDeck","front","setFront","back","setBack","history","abortController","AbortController","signal","then","card","cards","find","id","parseInt","catch","e","abort","handleSubmit","event","preventDefault","window","alert","console","log","push","name"],"sources":["/Users/river/Desktop/Project-_Flashcards-_Qualified-main/src/Layout/cards/EditCard.js"],"sourcesContent":["import  React, {useEffect, useState } from \"react\";\nimport { useParams,useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateCard, readDeck } from \"../../utils/api\";\nimport NavigationBar from \"../NavigationBar\";\nimport NotFound from \"../NotFound\";\nimport CardFormData from \"./CardFormData\";\n\nfunction EditCard() {\n  const { deckId,cardId } = useParams();\n  const [deck, setDeck] = useState({});\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const history=useHistory();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then((deck)=>{\n          setDeck(deck);\n          const card=deck.cards.find((card)=>card.id===parseInt(cardId));\n          setFront(card.front);\n          setBack(card.back);\n        })\n      .catch((e) => {\n        return <NotFound />;\n      });\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (!deck) {\n    return <NotFound />;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const card = {\n      id:cardId,  \n      front,\n      back,\n    };\n    updateCard(card)\n      .then(window.alert(\"Card Info Was Updated\"))\n      .catch(console.log).then(history.push(`/decks/${deckId}`));\n    \n  };\n\n  return (\n    <div>\n      <NavigationBar navItems={[deck.name, \"Edit Card \"+cardId]} />\n      {/* <h2>{deck.name}: AddCard</h2> */}\n      <form onSubmit={handleSubmit}>\n\n        <CardFormData\n          front={front}\n          setFront={setFront}\n          back={back}\n          setBack={setBack}\n        />\n\n        <Link\n          to={`/decks/${deckId}`}\n          className=\"form-button btn btn-lg btn-secondary mr-2\"\n        >\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditCard;\n"],"mappings":";;AAAA,OAAQA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAACC,UAAU,QAAQ,cAAc;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,iBAAiB;AACtD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM;IAAEC,MAAM;IAACC;EAAO,CAAC,GAAGV,SAAS,EAAE;EACrC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMkB,OAAO,GAAChB,UAAU,EAAE;EAE1BH,SAAS,CAAC,MAAM;IACd,MAAMoB,eAAe,GAAG,IAAIC,eAAe,EAAE;IAC7Cf,QAAQ,CAACK,MAAM,EAAES,eAAe,CAACE,MAAM,CAAC,CACrCC,IAAI,CAAEV,IAAI,IAAG;MACVC,OAAO,CAACD,IAAI,CAAC;MACb,MAAMW,IAAI,GAACX,IAAI,CAACY,KAAK,CAACC,IAAI,CAAEF,IAAI,IAAGA,IAAI,CAACG,EAAE,KAAGC,QAAQ,CAAChB,MAAM,CAAC,CAAC;MAC9DI,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC;MACpBG,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC;IACpB,CAAC,CAAC,CACHY,KAAK,CAAEC,CAAC,IAAK;MACZ,oBAAO,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IACrB,CAAC,CAAC;IACJ,OAAO,MAAMV,eAAe,CAACW,KAAK,EAAE;EACtC,CAAC,EAAE,CAACpB,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACE,IAAI,EAAE;IACT,oBAAO,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACrB;EAEA,MAAMmB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMV,IAAI,GAAG;MACXG,EAAE,EAACf,MAAM;MACTG,KAAK;MACLE;IACF,CAAC;IACDZ,UAAU,CAACmB,IAAI,CAAC,CACbD,IAAI,CAACY,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAC3CP,KAAK,CAACQ,OAAO,CAACC,GAAG,CAAC,CAACf,IAAI,CAACJ,OAAO,CAACoB,IAAI,CAAE,UAAS5B,MAAO,EAAC,CAAC,CAAC;EAE9D,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,aAAa;MAAC,QAAQ,EAAE,CAACE,IAAI,CAAC2B,IAAI,EAAE,YAAY,GAAC5B,MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAE7D;MAAM,QAAQ,EAAEoB,YAAa;MAAA,wBAE3B,QAAC,YAAY;QACX,KAAK,EAAEjB,KAAM;QACb,QAAQ,EAAEC,QAAS;QACnB,IAAI,EAAEC,IAAK;QACX,OAAO,EAAEC;MAAQ;QAAA;QAAA;QAAA;MAAA,QACjB,eAEF,QAAC,IAAI;QACH,EAAE,EAAG,UAASP,MAAO,EAAE;QACvB,SAAS,EAAC,2CAA2C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGhD,eACP;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,wBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/C;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhEQD,QAAQ;EAAA,QACWR,SAAS,EAIrBC,UAAU;AAAA;AAAA,KALjBO,QAAQ;AAkEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}