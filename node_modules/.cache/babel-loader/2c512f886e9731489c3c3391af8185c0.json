{"ast":null,"code":"const {\n  decks,\n  cards\n} = require(\"../../data/db\");\n\n/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\n//const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n// function stripCards(deck) {\n//   const { cards, ...deckWithoutCards } = deck;\n//   return deckWithoutCards;\n// }\n\nexport async function listDecks(signal) {\n  const result = decks.map(deck => {\n    deck.cards = cards.filter(card => card.deckId === deck.id);\n    return deck;\n  });\n  return result;\n}\nlet maxDeckId = decks.reduce((acc, _ref) => {\n  let {\n    id\n  } = _ref;\n  return Math.max(acc, id);\n}, 0);\nexport async function createDeck(deck, signal) {\n  deck.id = ++maxDeckId;\n  decks.push(deck);\n  return deck;\n}\nexport async function readDeck(deckId, signal) {\n  const result = decks.find(deck => deck.id === Number(deckId));\n  result.cards = cards.filter(card => card.deckId === Number(deckId));\n  return result;\n}\nexport async function updateDeck(updatedDeck, signal) {\n  updatedDeck.id = Number(updatedDeck.id);\n  const index = decks.findIndex(deck => deck.id === updatedDeck.id);\n  decks[index] = updatedDeck;\n  return decks[index];\n}\nexport async function deleteDeck(deckId, signal) {\n  const index = decks.findIndex(deck => deck.id === Number(deckId));\n  return decks.splice(index, 1);\n}\nexport async function listCards(deckId, signal) {\n  const deckCards = cards.filter(card => card.deckId === Number(deckId));\n  return deckCards;\n}\nlet maxCardId = cards.reduce((acc, _ref2) => {\n  let {\n    id\n  } = _ref2;\n  return Math.max(acc, id);\n}, 0);\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n\n  card.id = ++maxCardId;\n  card.deckId = Number(deckId);\n  cards.push(card);\n  return card;\n}\nexport async function readCard(cardId, signal) {\n  const result = cards.find(card => card.id === Number(cardId));\n  return result;\n}\nexport async function updateCard(updatedCard, signal) {\n  updatedCard.id = Number(updatedCard.id);\n  const index = cards.findIndex(card => card.id === updatedCard.id);\n  cards[index] = updatedCard;\n  return cards[index];\n}\nexport async function deleteCard(cardId, signal) {\n  const index = cards.findIndex(card => card.id === Number(cardId));\n  return cards.splice(index, 1);\n}","map":{"version":3,"names":["decks","cards","require","headers","Headers","append","listDecks","signal","result","map","deck","filter","card","deckId","id","maxDeckId","reduce","acc","Math","max","createDeck","push","readDeck","find","Number","updateDeck","updatedDeck","index","findIndex","deleteDeck","splice","listCards","deckCards","maxCardId","createCard","readCard","cardId","updateCard","updatedCard","deleteCard"],"sources":["/Users/river/Desktop/Project-_Flashcards-_Qualified-main/src/utils/api/index.js"],"sourcesContent":["const { decks , cards }=require(\"../../data/db\");\n\n\n/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\n//const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n\n// function stripCards(deck) {\n//   const { cards, ...deckWithoutCards } = deck;\n//   return deckWithoutCards;\n// }\n\n\n\n\nexport async function listDecks(signal) {\n  const result=decks.map((deck)=>{\n    deck.cards=cards.filter(card=>card.deckId===deck.id);\n    return deck;\n  });\n  return result;\n}\n\nlet maxDeckId=decks.reduce((acc,{id})=>Math.max(acc,id),0);\n\nexport async function createDeck(deck, signal) {\n  deck.id=++maxDeckId;\n  decks.push(deck);\n  return deck;\n}\n\nexport async function readDeck(deckId, signal) {\n  const result= decks.find(deck=>deck.id===Number(deckId));\n  result.cards=cards.filter(card=>card.deckId===Number(deckId));\n  return result;\n}\n\nexport async function updateDeck(updatedDeck, signal) {\n  updatedDeck.id=Number(updatedDeck.id);\n  const index=decks.findIndex(deck=>deck.id===updatedDeck.id);\n  decks[index]=updatedDeck;\n  return decks[index];\n}\n\nexport async function deleteDeck(deckId, signal) {\n  const index=decks.findIndex(deck=>deck.id===Number(deckId));\n  return decks.splice(index,1);\n}\n\n\nexport async function listCards(deckId, signal) {\n  const deckCards=cards.filter(card=>card.deckId===Number(deckId));\n  return deckCards;\n}\n\nlet maxCardId=cards.reduce((acc,{id})=>Math.max(acc,id),0);\n\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  \n  card.id=++maxCardId;\n  card.deckId=Number(deckId);\n  cards.push(card);\n  return card;\n}\n\nexport async function readCard(cardId, signal) {\n  const result= cards.find(card=>card.id===Number(cardId));\n  return result;\n}\n\nexport async function updateCard(updatedCard, signal) {\n  updatedCard.id=Number(updatedCard.id);\n  const index=cards.findIndex(card=>card.id===updatedCard.id);\n  cards[index]=updatedCard;\n  return cards[index];\n}\n\nexport async function deleteCard(cardId, signal) {\n  const index=cards.findIndex(card=>card.id===Number(cardId));\n  return cards.splice(index,1);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}